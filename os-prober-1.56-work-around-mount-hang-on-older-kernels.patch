--- os-prober-1.56/common.sh.nohang~	2012-12-28 15:12:39.937518524 +0100
+++ os-prober-1.56/common.sh	2012-12-28 15:12:39.939518500 +0100
@@ -283,3 +283,12 @@ linux_mount_boot () {
 
 	mountboot="$bootpart $mounted"
 }
+
+kernel_newer() {
+	local newerkernel=$(echo -e "`uname -r`\n$1" | sort -g -t '.' | tail -n1)
+	if [ "$newerkernel" = "$1" ]; then
+		return 1
+	else
+		return 0
+	fi
+}
--- os-prober-1.56/os-prober.nohang~	2012-12-28 15:12:39.942518461 +0100
+++ os-prober-1.56/os-prober	2012-12-28 15:49:26.250935810 +0100
@@ -7,8 +7,14 @@ newns "$@"
 require_tmpdir
 
 for device in /dev/sd*; do
-        mkdir -p /run/os-prober$device/
-        mount -r $device /run/os-prober$device >/dev/null 2>&1 || :
+	# on older kernels mount would hang with 100% cpu usage if trying to
+	# mount extended partitions, so just skip partitions blkid doesn't
+	# report any type of to be on the safe side for older kernels
+	if ! kernel_newer "3.4.4" && fs_type $device | [ $(wc -l) -eq 0 ]; then
+		continue
+	fi
+	mkdir -p /run/os-prober$device/
+	mount -r $device /run/os-prober$device >/dev/null 2>&1 || :
 done
 
 log_output () {
@@ -130,6 +136,13 @@ if [ -f /proc/mdstat ] ; then
 fi
 
 for partition in $(partitions); do
+	# on older kernels mount would hang with 100% cpu usage if trying to
+	# mount extended partitions, so just skip partitions blkid doesn't
+	# report any type of to be on the safe side for older kernels
+	if ! kernel_newer "3.4.4" && fs_type "$partition" | [ $(wc -l) -eq 0 ]; then
+		continue
+	fi
+
 	if ! mapped="$(mapdevfs "$partition")"; then
 		log "Device '$partition' does not exist; skipping"
 		continue
